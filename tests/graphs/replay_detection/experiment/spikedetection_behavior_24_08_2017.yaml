processors:
    source:
        class: NlxPureReader
        advanced:
            threadpriority: 100
            threadcore: 0
        options:
            address: 192.168.3.100 # room A 192.168.3.99, room B 192.168.3.100
            port: 26090

    parser:
        class: NlxParser
        options:
            batch_size: 4
            update_interval: 15
            gaps_filling: asap

    dispatcher:
        class: Dispatcher
        options:
            channelmap:
                tt1: [0, 1, 2, 3]
                tt2: [4, 5, 6, 7]
                tt3: [8, 9, 10, 11]
                tt4: [12, 13, 14, 15]
                tt9: [32, 33, 34, 35]
                tt10: [36, 37, 38, 39]
                tt11: [40, 41, 42, 43]
                tt12: [44, 46, 47]
                tt14: [52, 53, 54, 55]
                tt18: [68, 69, 70, 71]
                tt19: [72, 73, 74, 75]
                tt20: [76, 77, 78, 79]
                tt22: [84, 85, 86, 87]
                tt24: [92, 93, 94, 95]

    vt_reader:
        class: VideoTrackReader
        options:
            ip_address: "tcp://10.86.1.21:5556" # tcp://10.86.1.21 = Cheetah PC2, tcp://10.86.1.22 = Cheetah PC1
            update_interval: 10
            n_max_consecutive_occlusions: 5

    filter(1-4, 9-12, 14, 18-20, 22, 24):
        class: MultiChannelFilter
        options:
            filter:
                file: repo://tests/filters/iir_spike/bessel_spike.filter

    spikedetector(1-4, 9-12, 14, 18-20, 22, 24):
        class: SpikeDetector
        options:
            threshold: 60.0
            invert_signal: true
            peak_lifetime: 10
            buffer_size: 500.0
            strict_time_bin_check: true

    sink_spikes(1-4, 9-12, 14, 18-20, 22, 24):
        class: FileSerializer
        options:
            encoding: binary
            format: compact

    sink_vt:
        class: FileSerializer
        options:
            encoding: binary
            format: full

connections:
    - source.udp=parser.udp
    - parser.data=dispatcher.data
    - dispatcher.tt(1-4, 9-12, 14, 18-20, 22, 24)=filter(1-4, 9-12, 14, 18-20, 22, 24).data.0
    - filter(1-4, 9-12, 14, 18-20, 22, 24).data=spikedetector(1-4, 9-12, 14, 18-20, 22, 24).data
    - spikedetector(1-4, 9-12, 14, 18-20, 22, 24).spikes=sink_spikes(1-4, 9-12, 14, 18-20, 22, 24).data
    - vt_reader.vt=sink_vt.data

states:
    - [source.n_invalid, parser.n_invalid]

