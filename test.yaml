
#PROCESSOR DEFINITIONS
definitions:
  ephysreader: &EPHYS
    class: ephysreader
    options: &EPHYS_OPTIONS
      buffersize: 1
      mapping: []
    states: &EPHYS_STATES
    streams:
      out.data:
        datatype: nchanneldata
        dynamic: true
        maxports: 1024
        ports: []
  
  biquadfilter: &BIQUADFILTER
    class: biquadcascadesham
    options: &BIQUADFILTER_OPTIONS
      file: ""
      coefficients: ""
    states: &BIQUADFILTER_STATES
    streams:
      in.data:
        datatype: nchanneldata
        dynamic: false
        maxports: 1
        ports: [data]
      out.data:
        datatype: nchanneldata
        dynamic: false
        maxports: 1
        ports: [data]
  
  spikedetector: &SPIKEDETECTOR
    class: spikedetector
    options: &SPIKEDETECTOR_OPTIONS
      peaklifetime: 12
      buffersize: 0.5
    states: &SPIKEDETECTOR_STATES
      in.threshold: 50.0
    streams:
      in.data:
        datatype: nchanneldata
        dynamic: false
        maxports: 1
        ports: [data]
      out.data:
        datatype: spikedata
        dynamic: false
        maxports: 1
        ports: [data]


#GRAPH DEFINITION
templates:
  filter: &TEMPLATEFILTER
    <<: *BIQUADFILTER
    options:
      <<: *BIQUADFILTER_OPTIONS
      file: filename

  spike_detector: &TEMPLATESPIKEDETECTOR
    <<: *SPIKEDETECTOR
    options:
      <<: *SPIKEDETECTOR_OPTIONS
      buffersize: 1.0
    states:
      <<: *SPIKEDETECTOR_STATES
      in.threshold: 100.0

processors:
  reader:
    <<: *EPHYS
    options:
      <<: *EPHYS_OPTIONS
      mapping: 
        - {name: tt1, channels: [0, 1, 2, 3]}
        - {name: tt2, channels: [0, 1, 2, 3]}
  filter1: *TEMPLATEFILTER
  filter2: *TEMPLATEFILTER
  filter3: *TEMPLATEFILTER
  spike1: *TEMPLATESPIKEDETECTOR
  spike2: *TEMPLATESPIKEDETECTOR
  spike3: *TEMPLATESPIKEDETECTOR

connections:
  - reader.data.tt1: filter1
  - reader.data.tt2: filter2
  - filter1.data: spike1
  - filter2.data: spike2

...
